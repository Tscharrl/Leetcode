/*
Leetcode64 最小路径和

Author:     Tscharrl
Language:   C++
Tag:        Math

Description: 
有 n 位乘客即将登机，飞机正好有 n 个座位。第一位乘客的票丢了，他随便选了一个座位坐下。
剩下的乘客将会：
- 如果他们自己的座位还空着，就坐到自己的座位上，
- 当他们自己的座位被占用时，随机选择其他座位
第 n 位乘客坐在自己的座位上的概率是多少？

Example: 
    Input: n = 1
    Output: 1.00000
    Explain: 第一个人只会坐在自己的位置上。

    Input: n = 2
    Output: 0.50000
    Explain: 在第一个人选好座位坐下后，第二个人坐在自己的座位上的概率是 0.5。
*/
/*
概率题，有几种解释：
1. 对于n>3的情况，中间n-2个人肯定有n-3个人都坐在自己位置上，因为第一个人只能占一个位置，
   乱序的位置只有3个，所以一切n>3的问题都退化为n=3.
   1) 人1坐在位置1, 人2和人3都能正确入座，1/3*1
   2) 人1坐在位置2, 人3无法正确入座的概率为1/2，1/3*1/2
   3) 人1坐在位置3, 人3肯定不能正确入座，1/3*0
   相加得到1/3 + 1/6 + 0 = 1/2
2. 第一个人可能坐在位置1、位置n和位置k(1<k<n)
   1) 人1坐在位置1, (1/n)*1
   2) 人1坐在位置n, (1/n)*0
   3) 人1坐在位置k, [2, k-1]都坐在自己位置上，人k此时面临和人1类似的抉择，只是问题规模由n变为n-k+1
   递推公式：p(n) = (1/n)*1 + (1/n)*0 + [(n-2)/n]*p(n-1)
*/
class Solution {
public:
    double nthPersonGetsNthSeat(int n) {
        return n==1 ? 1 : 0.5;
    }
};